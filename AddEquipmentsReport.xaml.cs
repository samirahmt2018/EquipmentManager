using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Shapes;

namespace Equipment_Manager
{
    /// <summary>
    /// Interaction logic for AddEquipmentsReport.xaml
    /// </summary>
    public partial class AddEquipmentsReport : Window
    {
        DataTable values;
        public AddEquipmentsReport(string user_id)
        {
            InitializeComponent();
            try
            {

                //  maintainance_reports.ItemsSource = values.AsDataView();
                ExcelFileSelector fileS = new ExcelFileSelector();
                fileS.ShowDialog();
                values = DBManager.SelectFromExcel(fileS.fileName, fileS.sheetName, fileS.cellValues);
                values.Columns.Add("user_id", typeof(System.String));
                //MessageBox.Show("Error Occured", "Invalid Data size", MessageBoxButton.OK, MessageBoxImage.Error);

                foreach (DataRow row in values.Rows)
                {
                    row["user_id"] = user_id;//need to set value to NewColumn column
                }
               /* if (values.Columns.Count != 12)
                {
                    MessageBox.Show( "Invalid Data size", "Error Occured", MessageBoxButton.OK, MessageBoxImage.Error);
                    this.Close();
                }*/
                maintainance_reports.ItemsSource = values.AsDataView();
            }
            catch
            {

            }

        }

        private void maintainance_reports_AutoGeneratedColumns(object sender, EventArgs e)
        {
            try
            {


                maintainance_reports.Columns[0].Header = "Date";
                maintainance_reports.Columns[1].Header = "Equipment Id";
                maintainance_reports.Columns[2].Header = "Activity Detail";
                maintainance_reports.Columns[3].Header = "Morning Start at";
                maintainance_reports.Columns[4].Header = "Morning End at";
                maintainance_reports.Columns[5].Header = "Afternoon Start at";
                maintainance_reports.Columns[6].Header = "Afternoon End at";
                maintainance_reports.Columns[7].Header = "Idle Time";
                maintainance_reports.Columns[8].Header = "Idle Reason";
                maintainance_reports.Columns[9].Header = "Fuel Used";
                maintainance_reports.Columns[10].Header = "Site Productivity";
                maintainance_reports.Columns[11].Header = "User ID";



            }
            catch (Exception ex)
            {
                 
                    //this.Close();
                
            }
        }

        private void Window_Loaded(object sender, RoutedEventArgs e)
        {
            if (values==null || values.Columns.Count != 12)
            {
                this.Close();
                myMessageBox mm = new myMessageBox("Column Count Doesnt match or no data found", "Error", "OK", 1);
                mm.ShowDialog();

               // MessageBox.Show("Invalid Data size", "Error Occured", MessageBoxButton.OK, MessageBoxImage.Error);
                
            }
        }

        private void insertButton_Click(object sender, RoutedEventArgs e)
        {
            int i = 0;
            string datas = "";
            try
            {
                foreach (DataRow row in values.Rows)
                {
                    if (i == 0)
                    {
                        datas = "('" + Convert.ToDateTime(row[0].ToString()).ToString("yyyy-MM-dd HH:mm:ss") + "','" + row[1].ToString() + "','" + row[2].ToString() + "','" + row[3].ToString() + "','" + row[4].ToString() + "','" + row[5].ToString() + "','" + row[6].ToString() + "','" + row[7].ToString() + "','" + row[8].ToString() + "','" + row[9].ToString() + "','" + row[10].ToString() + "','" + row[11].ToString() + "')";

                    }
                    else
                    {
                        datas = datas + ",('" + Convert.ToDateTime(row[0].ToString()).ToString("yyyy-MM-dd HH:mm:ss") + "','" + row[1].ToString() + "','" + row[2].ToString() + "','" + row[3].ToString() + "','" + row[4].ToString() + "','" + row[5].ToString() + "','" + row[6].ToString() + "','" + row[7].ToString() + "','" + row[8].ToString() + "','" + row[9].ToString() + "','" + row[10].ToString() + "','" + row[11].ToString() + "')";
                    }
                    i++;
                }
                string res = DBManager.InsertIntoEquipmenMonitoring(datas);
                if (!res.Contains("Success"))
                {
                    myMessageBox mm = new myMessageBox("Invalid Data Type Found. Check your data again", "Error", "OK", 1);
                    mm.ShowDialog();

                  //  MessageBox.Show("Invalid Data Type Found. Check your data again", "Error Occured", MessageBoxButton.OK, MessageBoxImage.Error);

                }
                else
                {
                    myMessageBox mm = new myMessageBox("Data added successfully.", "Success", "OK", 0);
                    mm.ShowDialog();

                    // MessageBox.Show("Data Added Succesfully", "Successfully Added", MessageBoxButton.OK, MessageBoxImage.Information);
                    this.Close();
                }
            }
            catch (Exception ex)
            {
                //
            }
        }

    }
}
